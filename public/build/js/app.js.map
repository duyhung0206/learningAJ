{"version":3,"sources":["app.js","auth.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["var myApp = angular.module('myApp', ['ngRoute', 'ngCookies', 'ui.bootstrap', 'bootstrapLightbox', 'angular-loading-bar']);\n\nmyApp.config(['$locationProvider', function($locationProvider) {\n    $locationProvider.hashPrefix('');\n}]);\n\nmyApp.config(['$qProvider', function ($qProvider) {\n    $qProvider.errorOnUnhandledRejections(false);\n}]);\n\nmyApp.config(['$routeProvider', '$locationProvider',function($routeProvider, $locationProvider)  {\n\t$routeProvider.when('/', {\n\t\ttemplateUrl:'templates/users/login.html',\n\t\tcontroller:'userController',\n\t});\n\t$routeProvider.when('/dashboard', {\n\t\ttemplateUrl:'templates/users/dashboard.html',\n\t\tcontroller:'userController',\n\t\tauthenticated: true,\n\t});\n\t$routeProvider.when('/gallery/view', {\n        templateUrl: 'templates/gallery/gallery-view.html',\n        controller: 'galleryController',\n        resolve: {\n            data: function(galleryModel) {\n                return {\n                    galleries: galleryModel.getAllGalleries()\n                };\n            }\n        },\n        authenticated: true\n    });\n\n    $routeProvider.when('/gallery/add', {\n        templateUrl: 'templates/gallery/gallery-add.html',\n        controller: 'galleryController',\n        resolve: {\n            data: function() {\n                return 'single';\n            }\n        },\n        authenticated: true\n    });\n\n    $routeProvider.when('/gallery/view/:id', {\n        templateUrl: 'templates/gallery/gallery-single.html',\n        controller: 'galleryController',\n        resolve: {\n            data: function(galleryModel, $route) {\n                return {\n                    singleGallery: galleryModel.getGalleryById($route.current.params.id)\n                };\n            }\n        },\n        authenticated: true\n    });\n\t$routeProvider.when('/logout', {\n\t\ttemplateUrl:'templates/users/logout.html',\n\t\tcontroller:'userController',\n\t\tauthenticated: true,\n\t});\n\t$routeProvider.otherwise('/');\n}]);\n\nmyApp.run(['$rootScope', '$location', 'userModel', function($rootScope, $location, userModel){\n\t$rootScope.$on('$routeChangeStart', function(event, next, current){\n\t\tif(next.$$route.authenticated){\n\t\t\tif(!userModel.getAuthStatus()){\n\t\t\t\t$location.path('/');\n\t\t\t}\n\t\t}\n\n\t\tif(next.$$route.originalPath == '/'){\n\t\t\tif(userModel.getAuthStatus()){\n\t\t\t\t$location.path(next.$$route.originalPath);\n\t\t\t}\n\t\t}\n\t});\n}]);\n\nmyApp.directive('dropzone', function () {\n\treturn function (scope, element, attrs) {\n    var config, dropzone;\n\n    config = scope[attrs.dropzone];\n\n    // create a Dropzone for the element with the given options\n    dropzone = new Dropzone(element[0], config.options);\n\n    // bind the given event handlers\n    angular.forEach(config.eventHandlers, function (handler, event) {\n      dropzone.on(event, handler);\n    });\n  };\t\n})","myApp.factory('errorInterceptor', ['$location', '$rootScope', '$cookies' , '$window', \n    function ($location, $rootScope, $cookies, $window) {\n        return {\n            responseError: function (response) {\n                if (response && response.status === 501) {\n                    if($location.url() != '/'){\n                        $cookies.remove('auth');\n                        console.log(response);\n                        $window.location.href = baseUrl;\n                    }\n                }\n\n            }\n        };\n}]);\n\nmyApp.config(function ($httpProvider) {\n    $httpProvider.interceptors.push('errorInterceptor');    \n});"]}